// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QRCodeSystem.Infrastructure.Data;

#nullable disable

namespace QRCodeSystem.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250414042447_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QRCodeSystem.Core.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("QRCodeSystem.Core.Entities.EmployeeBasicInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeNumber")
                        .IsUnique();

                    b.ToTable("EmployeeBasicInfos");
                });

            modelBuilder.Entity("QRCodeSystem.Core.Entities.EmployeeLeave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BereavementLeave")
                        .HasColumnType("int");

                    b.Property<int>("BusinessTrip")
                        .HasColumnType("int");

                    b.Property<int>("CompensatoryLeave")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("MarriageLeave")
                        .HasColumnType("int");

                    b.Property<int>("OfficialLeave")
                        .HasColumnType("int");

                    b.Property<int>("OtherLeave")
                        .HasColumnType("int");

                    b.Property<int>("PersonalLeave")
                        .HasColumnType("int");

                    b.Property<int>("SickLeave")
                        .HasColumnType("int");

                    b.Property<int>("SpecialLeave")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeNumber")
                        .IsUnique();

                    b.ToTable("EmployeeLeaves");
                });

            modelBuilder.Entity("QRCodeSystem.Core.Entities.EmployeePosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeNumber")
                        .IsUnique();

                    b.ToTable("EmployeePositions");
                });

            modelBuilder.Entity("QRCodeSystem.Core.Entities.QRCodeAccessLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AccessTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("QRCodeId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeNumber");

                    b.ToTable("QRCodeAccessLogs");
                });

            modelBuilder.Entity("QRCodeSystem.Core.Entities.EmployeeLeave", b =>
                {
                    b.HasOne("QRCodeSystem.Core.Entities.EmployeeBasicInfo", "Employee")
                        .WithOne("Leave")
                        .HasForeignKey("QRCodeSystem.Core.Entities.EmployeeLeave", "EmployeeNumber")
                        .HasPrincipalKey("QRCodeSystem.Core.Entities.EmployeeBasicInfo", "EmployeeNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("QRCodeSystem.Core.Entities.EmployeePosition", b =>
                {
                    b.HasOne("QRCodeSystem.Core.Entities.Department", "Department")
                        .WithMany("EmployeePositions")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QRCodeSystem.Core.Entities.EmployeeBasicInfo", "Employee")
                        .WithOne("Position")
                        .HasForeignKey("QRCodeSystem.Core.Entities.EmployeePosition", "EmployeeNumber")
                        .HasPrincipalKey("QRCodeSystem.Core.Entities.EmployeeBasicInfo", "EmployeeNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("QRCodeSystem.Core.Entities.QRCodeAccessLog", b =>
                {
                    b.HasOne("QRCodeSystem.Core.Entities.EmployeeBasicInfo", "Employee")
                        .WithMany("AccessLogs")
                        .HasForeignKey("EmployeeNumber")
                        .HasPrincipalKey("EmployeeNumber")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("QRCodeSystem.Core.Entities.Department", b =>
                {
                    b.Navigation("EmployeePositions");
                });

            modelBuilder.Entity("QRCodeSystem.Core.Entities.EmployeeBasicInfo", b =>
                {
                    b.Navigation("AccessLogs");

                    b.Navigation("Leave")
                        .IsRequired();

                    b.Navigation("Position")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
